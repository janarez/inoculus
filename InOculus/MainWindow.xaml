<Window x:Class="InOculus.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InOculus"
        xmlns:properties="clr-namespace:InOculus.Properties"
        xmlns:utilities="clr-namespace:InOculus.Utilities"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Title="{x:Static utilities:AppPreferences.AppName}" 
        AllowsTransparency="True" WindowStyle="None" Background="{DynamicResource ResourceKey=BackgroundBrush}"
        Height="{x:Static utilities:AppPreferences.WindowHeight}" 
        Width="{x:Static utilities:AppPreferences.WindowWidth}" 
        ResizeMode="CanMinimize" x:Name="wndMain">
    <!-- Extra packages: 
        - Bootstrap Icons (https://github.com/MahApps/MahApps.Metro.IconPacks)
        - Windows WinRT API (Microsoft.Windows.SDK.Contracts)
    -->
    <Window.Resources>
        <Style x:Key="countDownButton" TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=GrayRadialBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsMouseOver" Value="true">
                                <Setter Property="Border.BorderBrush" Value="{DynamicResource ResourceKey=LightAccentRadialBorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="topBarButton"  TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource ResourceKey=AccentBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5" 
                                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsMouseOver" Value="true">
                                <Setter Property="Button.Foreground" Value="{DynamicResource ResourceKey=LightAccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Margin="0 0 0 10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Cursor="Hand" Click="BtnInfo_Click" x:Name="btnInfo" Style="{StaticResource topBarButton}" 
                    Content="{iconPacks:BootstrapIcons Kind={x:Static utilities:Icons.Info}}"/>
            <Button Grid.Column="1" Click="BtnStats_Click" x:Name="btnStats" Style="{StaticResource topBarButton}" 
                    Content="{iconPacks:BootstrapIcons Kind={x:Static utilities:Icons.Stats}}"/>
            <Button Grid.Column="2" Click="BtnSettings_Click" x:Name="btnSettings" Style="{StaticResource topBarButton}" 
                    Content="{iconPacks:BootstrapIcons Kind={x:Static utilities:Icons.Settings}}"/>
            <Button Grid.Column="4" Click="BtnMinimize_Click" x:Name="btnMinimize" Style="{StaticResource topBarButton}" 
                    Content="{iconPacks:BootstrapIcons Kind={x:Static utilities:Icons.Minimize}}"/>
            <Button Grid.Column="5" Click="BtnClose_Click" x:Name="btnClose" Style="{StaticResource topBarButton}" 
                    Content="{iconPacks:BootstrapIcons Kind={x:Static utilities:Icons.Close}}"/>
        </Grid>
        <Button Grid.Row="1" Click="BtnStart_Click" BorderThickness="{x:Static utilities:AppPreferences.BorderThickness}"
                Background="{DynamicResource ResourceKey=LightAccentBrush}"
                Height="{x:Static utilities:AppPreferences.CountDownDiameter}"
                Width="{x:Static utilities:AppPreferences.CountDownDiameter}"
                Style="{StaticResource countDownButton}"
                x:Name="btnStart">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="75"/>
                </Style>
            </Button.Resources>
            <Grid Margin="{x:Static utilities:AppPreferences.NegBorderThickness}">
                <Path Visibility="Hidden" StrokeThickness="{x:Static utilities:AppPreferences.CircleThickness}" Stroke="{DynamicResource ResourceKey=AccentBrush}"
                      Height="{x:Static utilities:AppPreferences.CircleDiameter}"  
                      Width="{x:Static utilities:AppPreferences.CircleDiameter}" x:Name="arcCountDown">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigureCollection>
                                    <PathFigure StartPoint="{x:Static utilities:AppPreferences.CircleStartPoint}">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment Size="{x:Static utilities:AppPreferences.CircleSize}" IsLargeArc="{Binding Path=IsLargeArc}" SweepDirection="CounterClockwise" Point="{Binding Path=EndPoint}" />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>
                                </PathFigureCollection>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label Content="{Binding Path=CountDown}" x:Name="lblTime" d:Content="00:05" FontSize="24" FontFamily="./Utilities/Fonts/#DSEG7 Classic"></Label>
                    <iconPacks:PackIconBootstrapIcons Kind="{x:Static utilities:Icons.Play}" x:Name="icnPlay" HorizontalAlignment="Stretch" Margin="5" Width="20" Height="20"/>
                </StackPanel>
            </Grid>
        </Button>
    </Grid>
</Window>
